#### Donwload D-ITG

sudo apt-get install unzip
sudo apt-get install g++
wget https://traffic.comics.unina.it/software/ITG/codice/D-ITG-2.8.1-r1023-src.zip --no-check-certificate
unzip  D-ITG-2.8.1-r1023-src.zip
cd  D-ITG-2.8.1-r1023/src
make


#### Run test

1. Start mininet and create network
# Set network
sudo mn --custom mininet/custom/AbilineTopo.py --topo abilinetopo --mac --arp --switch ovsk --controller remote --link tc

2. Add rules in the 2nd terminal


3. In the 1st terminal:
xterm h1
xterm h5

This will open 2 new windows (xterm)

In h5 xterm first:
cd D-ITG-2.8.1-r1023/bin
./ITGRecv

Then in h1 xterm:
cd D-ITG-2.8.1-r1023/bin
./ITGSend –T UDP –a 10.0.0.5 –c 100 –C 10 –t 60000 -l sender.log –x receiver.log

### This way ITGSend will generate one UDP flow with constant payload size (100 bytes) and constant packet
### rate (10 pps) for 60 seconds (60000 ms) and two packet-level log files will be generated both on sender (-l
### option) and receiver (-x option) side.


4. When the flow is over:

In h1 xterm:
./ITGDec sender.log -j 1000

In h5 xterm (you will need Ctrl-C first):
./ITGDec receiver.log -c 1000
(time, bitrate, delay, jitter, package loss)



------------------------------------------------------------------------------------------------------------------------------------------



### Example: h4 --> h11 flow
xterm h4
xterm h11

h11:
cd D-ITG-2.8.1-r1023/bin
./ITGRecv

h4:
cd D-ITG-2.8.1-r1023/bin
./ITGSend –T UDP –a 10.0.0.11 –c 100 –C 10 –t 60000 -l sender.log –x receiver.log
----------------------------------------------------------------------------------
./ITGDec receiver.log -c 1000
